mydata2 <- read_xlsx(file = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.xlsx", sheet = NULL, col_names = T)
mydata2 <- read_xlsx(file = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.xlsx", sheet = NULL, range = NULL, col_names = T)
mydata2 <- read_excel(file = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.xlsx", sheet = NULL, range = NULL, col_names = T)
###### Exploring Olink ByBandSleeve data and QC
###### Started 14/7/21 by Lucy Goudswaard
library(readxl)
mydata2 <- read_excel(file = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.xlsx", sheet = NULL, range = NULL, col_names = T)
mydata2 <- read_excel(path = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.xlsx", sheet = NULL, range = NULL, col_names = T)
mydata <- read.csv(file = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.csv", header = T, sep = " ")
mydata <- read.csv(file = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.csv", header = T, sep = ",")
View(mydata)
mydata <- read.csv(file = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.csv", header = T, sep = ";")
View(mydata2)
#mydata <- read.csv(file = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.csv", header = T, sep = ";")
mydata <- read_excel(path = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.xlsx", sheet = NULL, range = NULL, col_names = T)
View(mydata)
colnames(mydata)
table(mydata$Assay_Warning)
### Expore the data
w <- which(mydata$Assay_Warning == "WARN")
sum(w)
length(w)
warn <- mydata[w,]
View(warn)
w <- which(mydata$QC_Warning == "WARN")
length(w)
qcwarn <- mydata[w,]
View(qcwarn)
View(mydata)
length(unique(UniProt))
length(unique(mydat$UniProt))
length(unique(mydata$UniProt))
## How many proteins
length(unique(mydata$UniProt))
length(unique(mydata$SampleID))
library(tidyr)
length(unique(mydata$OlinkID))
mydatawide <- pivot_wider(
mydata,
id_cols = SampleID,
names_from = UniProt,
names_prefix = "",
names_sep = "_",
names_glue = NULL,
names_sort = FALSE,
names_repair = "check_unique",
values_from = value,
values_fill = NULL,
values_fn = NULL
)
mydatawide <- pivot_wider(
mydata,
id_cols = SampleID,
names_from = c(NPX, QC_Warning, Assay_Warning),
names_prefix = "",
names_sep = "_",
names_glue = NULL,
names_sort = FALSE,
names_repair = "check_unique",
values_from = UniProt,
values_fill = NULL,
values_fn = NULL
)
mydatawide <- pivot_wider(
mydata,
id_cols = SampleID,
names_from = UniProt,
names_prefix = "",
names_sep = "_",
names_glue = NULL,
names_sort = FALSE,
names_repair = "check_unique",
values_from = c(NPX, QC_Warning, Assay_Warning),
values_fill = NULL,
values_fn = NULL
)
mydatawide <- pivot_wider(
mydata,
id_cols = SampleID,
names_from = UniProt,
names_prefix = "",
names_sep = "_",
names_glue = NULL,
names_sort = FALSE,
names_repair = "check_unique",
values_from = NPX,
values_fill = NULL,
values_fn = NULL
)
mydatawide <- pivot_wider(
mydata,
id_cols = SampleID,
names_from = NPX,
names_prefix = "",
names_sep = "_",
names_glue = NULL,
names_sort = FALSE,
names_repair = "check_unique",
values_from = UniProt,
values_fill = NULL,
values_fn = NULL
)
View(mydatawide)
mydatawide <- pivot_wider(
mydata,
id_cols = SampleID,
names_from = UniProt,
names_prefix = "",
names_sep = "_",
names_glue = NULL,
names_sort = FALSE,
names_repair = "check_unique",
values_from = NPX,
values_fill = NULL,
values_fn = NULL
)
View(mydatawide)
## How many proteins
length(unique(mydata$UniProt))
length(unique(mydata$SampleID))
length(unique(mydata$OlinkID))
colnames(mydatawide)
colnames(mydatawide[,1001:1464])
mydatawide <- pivot_wider(
mydata,
id_cols = SampleID,
names_from = UniProt,
names_prefix = "",
names_sep = "_",
names_glue = NULL,
names_sort = FALSE,
names_repair = "check_unique",
values_from = c(NPX, QC_Warning, Assay_Warning),
values_fill = NULL,
values_fn = NULL
)
colnames(mydatawide[,1464:2000])
colnames(mydatawide[,1:1000])
colnames(mydata)
## Column of each protein data
mydatawide <- pivot_wider(
mydata,
id_cols = SampleID,
names_from = UniProt,
names_prefix = "",
names_sep = "_",
names_glue = NULL,
names_sort = FALSE,
names_repair = "check_unique",
values_from = c(NPX, OlinkID, Assay, MissingFreq, Panel, Panel_Lot_Nr, PlateID, QC_Warning, LOD, Normalization, Assay_Warning),
values_fill = NULL,
values_fn = NULL
)
par(mfrow=c(3,2))
for (i in 1:1463) {
DataDescribed = psych::describe(mydatawide[,i])
meanvar<-DataDescribed$mean
medianvar<-DataDescribed$median
minvar<-DataDescribed$min
maxvar<-DataDescribed$max
kurtosisvar<-DataDescribed$kurtosis
skewnessvar<-DataDescribed$skew
N<- nrow(mydatawide) - sum(is.na(mydatawide[,i]))
missingness <- (sum(is.na(mydatawide[,i]))/nrow(mydatawide))*100
a<-density(mydatawide[,i], na.rm=T)
thresholdx<-(maxvar+(maxvar/100))
thresholdy<-min(a$y)+(max(a$y)/4)
hist(mydatawide[,i], col="red",main=(names(mydatawide)[i]),prob=TRUE,xlab="peak area")
lines(density(mydatawide[,i], na.rm = TRUE),col="blue", lwd=2)
text(thresholdx,thresholdy, cex=0.6,
paste("N=", N, "\npercent missing=",
signif(missingness, 3), "\nmin=",
signif(minvar, 3), " \nmax=",
signif(maxvar, 3),
"\nmean=",
signif(meanvar, 3), " \nmedian=", signif(medianvar, 3),
"\nkurt=",
signif(kurtosisvar, 3), " \nskew=",
signif(skewnessvar, 3), sep = ''), pos = 3,xpd = NA)
}
str(mydatawide)
dim(mydatawide)
dim(mydatawide[,q1])
dim(mydatawide[,1])
str(mydatawide[,1])
str(mydatawide[,2])
mydatawide[2:1463] <- as.numeric(mydatawide[,2:1463])
mydatawide[2:1463] <- as.numeric(unlist(mydatawide[,2:1463]))
mydatawide[,2:1463] <- as.numeric(unlist(mydatawide[,2:1463]))
View(mydatawide)
str(mydatawide[,2])
mydatawide[,2:1463] <- unlist(mydatawide[,2:1463])
for (i in 2:1463) {
DataDescribed = psych::describe(mydatawide[,i])
meanvar<-DataDescribed$mean
medianvar<-DataDescribed$median
minvar<-DataDescribed$min
maxvar<-DataDescribed$max
kurtosisvar<-DataDescribed$kurtosis
skewnessvar<-DataDescribed$skew
N<- nrow(mydatawide) - sum(is.na(mydatawide[,i]))
missingness <- (sum(is.na(mydatawide[,i]))/nrow(mydatawide))*100
a<-density(mydatawide[,i], na.rm=T)
thresholdx<-(maxvar+(maxvar/100))
thresholdy<-min(a$y)+(max(a$y)/4)
hist(mydatawide[,i], col="red",main=(names(mydatawide)[i]),prob=TRUE,xlab="peak area")
lines(density(mydatawide[,i], na.rm = TRUE),col="blue", lwd=2)
text(thresholdx,thresholdy, cex=0.6,
paste("N=", N, "\npercent missing=",
signif(missingness, 3), "\nmin=",
signif(minvar, 3), " \nmax=",
signif(maxvar, 3),
"\nmean=",
signif(meanvar, 3), " \nmedian=", signif(medianvar, 3),
"\nkurt=",
signif(kurtosisvar, 3), " \nskew=",
signif(skewnessvar, 3), sep = ''), pos = 3,xpd = NA)
}
mydatawide[,2:1463] <- as.numeric(mydatawide[,2:1463])
for (i in 2:1463) {
mydatawide[,i] <-  as.numeric(unlist(mydatawide[,i]))
}
for (i in 2:1463) {
mydatawide[,i+1] <-  as.numeric(unlist(mydatawide[,i+1]))
}
for (i in 2:1463) {
mydatawide[,i-1] <-  as.numeric(unlist(mydatawide[,i-1]))
}
for (i in 2:1463) {
mydatawide[,i] <-  as.numeric(unlist(mydatawide[,i]))
}
rlang::last_error()
n(2:1463)
mydatawide[,2] <-  as.numeric(unlist(mydatawide[,2]))
length(mydatawide[,2])
sum(is.na(mydatawide[,2]))
sum(mydatawide[,2])
(mydatawide[1:5,2])
mydatawide <- as.data.frame(mydatawide)
mydatawide[,2] <-  as.numeric(unlist(mydatawide[,2]))
for (i in 2:1463) {
mydatawide[,i] <-  as.numeric(unlist(mydatawide[,i]))
}
for (i in 2:1463) {
mydatawide[,i] <-  as.numeric(mydatawide[,i])
}
for (i in 2:1463) {
mydatawide[,i] <-  as.numeric(unlist(mydatawide[,i]))
}
(mydatawide[1:5,2])
str(mydata)
### Expore the data - how may assay warnings?
w <- which(mydata$Assay_Warning == "WARN")
length(w)
warn <- mydata[w,]
## How many QC warnings?
w <- which(mydata$QC_Warning == "WARN")
length(w)
qcwarn <- mydata[w,]
## How many proteins
length(unique(mydata$UniProt)) ## 1463
length(unique(mydata$SampleID)) ## 258
length(unique(mydata$OlinkID)) ## 1472
## Column of each protein data
mydatawide <- pivot_wider(
mydata,
id_cols = SampleID,
names_from = UniProt,
names_prefix = "",
names_sep = "_",
names_glue = NULL,
names_sort = FALSE,
names_repair = "check_unique",
values_from = c(NPX, OlinkID, Assay, MissingFreq, Panel, Panel_Lot_Nr, PlateID, QC_Warning, LOD, Normalization, Assay_Warning),
values_fill = NULL,
values_fn = NULL
)
warnings()
mydatawide <- as.data.frame(as.matrix(mydatawide))
for (i in 2:1463) {
mydatawide[,i] <-  as.numeric(unlist(mydatawide[,i]))
}
rm(list = ls())
###### Exploring Olink ByBandSleeve data and QC
###### Started 14/7/21 by Lucy Goudswaard
library(readxl)
library(tidyr)
## Read in data
#mydata <- read.csv(file = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.csv", header = T, sep = ";")
mydata <- read_excel(path = "/Volumes/MRC-IEU-research/projects/wt1/wp1/012/working/data/olink_download_v2/20202265_Timpson_NPX_2021-04-27_V2.xlsx", sheet = NULL, range = NULL, col_names = T)
library(zip)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("data.table")
library(data.table)
#install.packages("systemfit")
library(systemfit)
#devtools::install_github("tidyverse/ggplot2")
library(ggplot2)
#install.packages("devtools")
library(devtools)
#install.packages("dplyr")
library(dplyr)
#install.packages("cowplot")
library(cowplot)
#install.packages("reshape2")
library(reshape2)
#install_github("ggbiplot", "vqv")
library(ggbiplot)
#install.packages("tidyr")
library(tidyr)
#install.packages("purrr")
library(purrr)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("broom")
library(broom)
#install.packages("generics")
library(generics)
#devtools::install_github("tidyverse/glue")
library(glue)
#devtools::install_github(repo = "amices/mice")
library(utils)
library(mice)
#install.packages("purrr")
library(purrr)
#install.packages("zoo")
library(zoo)
#install.packages("psych")
library(psych)
#if (!requireNamespace("BiocManager", quietly = TRUE))
# install.packages("BiocManager")
library(BiocManager)
#BiocManager::install("doppelgangR")
library(doppelgangR)
# install.packages("gtsummary")
library(gtsummary)
library(corrplot)
library(ggforestplot)
library(dplyr)
#install.packages("deming")
library(deming)
setwd("~/OneDrive - University of Bristol/DiRECT/DiRECT_output")
DiRECT <- read.xlsx("bmi_change_protein_main_delta_rnt_26.4.21.xlsx", sheet = "2SLS_BMI_protein")
DiRECT <- DiRECT[-c(16)]
DiRECTobs <- read.xlsx("bmi_change_protein_main_delta_rnt_26.4.21.xlsx", sheet = "Obs_BMI_change_protein")
INTERVALobs <- read.xlsx("INETRVAL_MR_obs_for_comparison.xlsx", sheet = "Obs")
INTERVALMR <- read.xlsx("INETRVAL_MR_obs_for_comparison.xlsx", sheet = "MR")
## Compare DiRECT estimates from OLS and TSLS
DiRECTall <-  merge(DiRECT, DiRECTobs, by = "Protein")
DiRECTall$Group <- ifelse(DiRECTall$Pval.x < 5.8E-5 & DiRECTall$Pval.y < 5.8E-5, "Associated both",
ifelse(DiRECTall$Pval.x > 5.8E-5 & DiRECTall$Pval.y > 5.8E-5, "Not associated",
ifelse(DiRECTall$Pval.x < 5.8E-5 & DiRECTall$Pval.y > 5.8E-5, "Associated in TSLS", "Associated in regression" )))
dem_DIRECT_all <- deming( Beta.y ~ Beta.x, data = DiRECTall, xstd = SE.x, ystd = SE.y)
lm <- summary(lm(Beta.y ~ Beta.x, data = DiRECTall))
#pdf(file = "~/OneDrive - University of Bristol/PhD/Main project/Thesis/index/figure/DiRECT/DiRECT_scatter_comparison.pdf", width = 9, height = 6)
ggplot(DiRECTall, aes(x = Beta.x, y = Beta.y)) +
geom_point(aes(x = Beta.x, y = Beta.y, color = Group ), size = 0.8) +
xlab("DiRECT BMI-protein estimate TSLS (SDs)") + ylab("DiRECT BMI-protein linear regression estimate (SDs)") +
#ggtitle("Association between DiRECT and INTERVAL BMI-protein estimates") +
annotate("text", x = -0.5, y = 0.4, label = "N=4601", size = 3) +
annotate("text", x = -0.5, y = 0.35, label = ("Rsquared =0.84"), size = 3) +
annotate("text", x = -0.5, y = 0.3, label = ("P value = < 2.2e-16"), size = 3) +
geom_text(aes(label = ifelse(Group == "Associated both" & abs(Beta.x) > 0.5, Target.x, "")), size = 1.5, color = "black") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
# geom_abline(intercept = dem_DIRECT_all$coefficients[1], slope = dem_DIRECT_all$coefficients[2], color = "black") +
# geom_abline(intercept = dem_DIRECT_all$ci[1,1], slope = dem_DIRECT_all$ci[2,1], lwd = 1, color = "black", linetype = 'dashed') +
#geom_abline(intercept = dem_DIRECT_all$ci[1,2], slope = dem_DIRECT_all$ci[2,2], lwd = 1, color = "black", linetype = 'dashed') +
geom_smooth(method = 'lm', formula = y ~ x)
dev.off()
INTERVAL <- merge(INTERVALobs, INTERVALMR, by = "ID")
INTERVAL <- distinct(INTERVAL, Target.x, .keep_all = T)
## Restrict to unique Target names
DiRECT <- distinct(DiRECT,Target, .keep_all = T)
DandI <- merge(DiRECT, INTERVAL, by.x = "Target", by.y = "Target.x", all= FALSE)
## Association between DiRECT and INTERVAL MR results
DandI$Group <- ifelse(DandI$Pval < 5.8E-5 & DandI$P_val.y < 5.8E-5, "Associated both",
ifelse(DandI$Pval > 5.8E-5 & DandI$P_val.y > 5.8E-5, "Not associated",
ifelse(DandI$Pval < 5.8E-5 & DandI$P_val.y > 5.8E-5, "Associated in DiRECT", "Associated in INTERVAL" )))
#DandI$INTERVAL_Pvalue <- as.factor(ifelse(DandI$P_val.y < 5.8E-5, "P<5.8E-5", "P>5.8E-5"))
DandI$Cluster <- as.factor(DandI$Cluster)
similar_estimates = function(x,y){
df = data.frame(x = scale(x), y = scale(y) )
out1 = apply(df, 1, function(z){
ifelse( abs(z[2]-z[1]) <= 1, "same", "different"  )
})
out2 = apply(df, 1, function(z){
ifelse( abs(z[1])>=1 & abs(z[2])>=1, "extreme", "notextreme")
})
w = which(out1 == "same" & out2 == "extreme")
if(length(w)>1){
out1[w] = out2[w]
}
out = out1
return(out)
}
Comparison <- similar_estimates(DandI$Beta, DandI$Beta_coefficient.y)
ComparisonObs <-  similar_estimates(DandI$Beta, DandI$Beta_coefficient.x)
lm<- summary(lm(data=DandI, Beta_coefficient.y ~ Beta))
#pdf(file = "~/OneDrive - University of Bristol/PhD/Main project/Thesis/index/figure/DiRECT/DiRECT_INTERVAL_comparison.pdf", width = 9, height = 6)
ggplot(DandI, aes( x = Beta, y = Beta_coefficient.y )) +
geom_point(aes(color= Comparison), size = 1) +
geom_text(aes(label = ifelse(Comparison == "extreme" & abs(Beta) > 0.3, Target, "")), size = 2, color = "black") +
geom_smooth(method = 'lm', formula = y ~ x) +
xlab("DiRECT BMI-protein estimate") + ylab("INTERVAL MR BMI-protein estimate") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
annotate("text", x = -0.5, y = 0.5, label = "N=2803", size = 5) +
annotate("text", x = -0.5, y = 0.4, label = ("R squared = 0.11"), size = 5) +
annotate("text", x = -0.5, y = 0.3, label = ("P = 1.0E-77"), size = 5)
# geom_abline(intercept = mle$coefficients[1], slope = mle$coefficients[2], color = "black") +
# geom_abline(intercept = mle$ci[1,1], slope = mle$ci[2,1], lwd = 0.5, color = "black", linetype = 'dashed') +
# geom_abline(intercept = mle$ci[1,2], slope = mle$ci[2,2], lwd = 0.5, color = "black", linetype = 'dashed')
#geom_abline(inte
lm<- summary(lm(data=DandI, Beta_coefficient.y ~ Beta))
#pdf(file = "~/OneDrive - University of Bristol/PhD/Main project/Thesis/index/figure/DiRECT/DiRECT_INTERVAL_comparison.pdf", width = 9, height = 6)
ggplot(DandI, aes( x = Beta, y = Beta_coefficient.y )) +
geom_point(aes(color= Comparison), size = 1) +
geom_text(aes(label = Target)) +
# geom_text(aes(label = ifelse(Comparison == "extreme" & abs(Beta) > 0.3, Target, "")), size = 2, color = "black") +
geom_smooth(method = 'lm', formula = y ~ x) +
xlab("DiRECT BMI-protein estimate") + ylab("INTERVAL MR BMI-protein estimate") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
annotate("text", x = -0.5, y = 0.5, label = "N=2803", size = 5) +
annotate("text", x = -0.5, y = 0.4, label = ("R squared = 0.11"), size = 5) +
annotate("text", x = -0.5, y = 0.3, label = ("P = 1.0E-77"), size = 5)
lm<- summary(lm(data=DandI, Beta_coefficient.y ~ Beta))
#pdf(file = "~/OneDrive - University of Bristol/PhD/Main project/Thesis/index/figure/DiRECT/DiRECT_INTERVAL_comparison.pdf", width = 9, height = 6)
ggplot(DandI, aes( x = Beta, y = Beta_coefficient.y )) +
geom_point(aes(color= Comparison), size = 1) +
geom_text(aes(label = Target), size = 2) +
# geom_text(aes(label = ifelse(Comparison == "extreme" & abs(Beta) > 0.3, Target, "")), size = 2, color = "black") +
geom_smooth(method = 'lm', formula = y ~ x) +
xlab("DiRECT BMI-protein estimate") + ylab("INTERVAL MR BMI-protein estimate") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
annotate("text", x = -0.5, y = 0.5, label = "N=2803", size = 5) +
annotate("text", x = -0.5, y = 0.4, label = ("R squared = 0.11"), size = 5) +
annotate("text", x = -0.5, y = 0.3, label = ("P = 1.0E-77"), size = 5)
View(DandI)
lm<- summary(lm(data=DandI, Beta_coefficient.y ~ Beta))
#pdf(file = "~/OneDrive - University of Bristol/PhD/Main project/Thesis/index/figure/DiRECT/DiRECT_INTERVAL_comparison.pdf", width = 9, height = 6)
ggplot(DandI, aes( x = Beta, y = Beta_coefficient.y )) +
geom_point(aes(color= Comparison), size = 1) +
geom_text(aes(label = Target), size = 2) +
# geom_text(aes(label = ifelse(Comparison == "extreme" & abs(Beta) > 0.3, Target, "")), size = 2, color = "black") +
geom_smooth(method = 'lm', formula = y ~ x) +
xlab("DiRECT BMI-protein estimate") + ylab("INTERVAL MR BMI-protein estimate") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
annotate("text", x = -0.5, y = 0.5, label = "N=2803", size = 5) +
annotate("text", x = -0.5, y = 0.4, label = ("R squared = 0.11"), size = 5) +
annotate("text", x = -0.5, y = 0.3, label = ("P = 1.0E-77"), size = 5)
colnames(DandI)
ggplot(DandI, aes( x = Beta, y = Beta_coefficient.y )) +
geom_point(aes(color= Cluster), size = 1) +
geom_text(aes(label = Target), size = 2) +
# geom_text(aes(label = ifelse(Comparison == "extreme" & abs(Beta) > 0.3, Target, "")), size = 2, color = "black") +
geom_smooth(method = 'lm', formula = y ~ x) +
xlab("DiRECT BMI-protein estimate") + ylab("INTERVAL MR BMI-protein estimate") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
annotate("text", x = -0.5, y = 0.5, label = "N=2803", size = 5) +
annotate("text", x = -0.5, y = 0.4, label = ("R squared = 0.11"), size = 5) +
annotate("text", x = -0.5, y = 0.3, label = ("P = 1.0E-77"), size = 5)
ggplot(DandI, aes( x = Beta, y = Beta_coefficient.y )) +
geom_point(aes(color= Cluster), size = 1) +
# geom_text(aes(label = Target), size = 2) +
# geom_text(aes(label = ifelse(Comparison == "extreme" & abs(Beta) > 0.3, Target, "")), size = 2, color = "black") +
geom_smooth(method = 'lm', formula = y ~ x) +
xlab("DiRECT BMI-protein estimate") + ylab("INTERVAL MR BMI-protein estimate") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
annotate("text", x = -0.5, y = 0.5, label = "N=2803", size = 5) +
annotate("text", x = -0.5, y = 0.4, label = ("R squared = 0.11"), size = 5) +
annotate("text", x = -0.5, y = 0.3, label = ("P = 1.0E-77"), size = 5)
ggplot(DandI, aes( x = Beta, y = Beta_coefficient.y )) +
geom_point(aes(color= Comparison), size = 1) +
geom_text(aes(label = Target), size = 2) +
# geom_text(aes(label = ifelse(Comparison == "extreme" & abs(Beta) > 0.3, Target, "")), size = 2, color = "black") +
geom_smooth(method = 'lm', formula = y ~ x) +
xlab("DiRECT BMI-protein estimate") + ylab("INTERVAL MR BMI-protein estimate") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
annotate("text", x = -0.5, y = 0.5, label = "N=2803", size = 5) +
annotate("text", x = -0.5, y = 0.4, label = ("R squared = 0.11"), size = 5) +
annotate("text", x = -0.5, y = 0.3, label = ("P = 1.0E-77"), size = 5)
ggplot(DandI, aes( x = Beta, y = Beta_coefficient.y )) +
geom_point(aes(color= Comparison), size = 1) +
geom_text(aes(label = Target), size = 2) +
# geom_text(aes(label = ifelse(Comparison == "extreme" & abs(Beta) > 0.3, Target, "")), size = 2, color = "black") +
geom_smooth(method = 'lm', formula = y ~ x) +
xlab("DiRECT BMI-protein estimate") + ylab("INTERVAL MR BMI-protein estimate") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
annotate("text", x = -0.5, y = 0.5, label = "N=2803", size = 5) +
annotate("text", x = -0.5, y = 0.4, label = ("R squared = 0.11"), size = 5) +
annotate("text", x = -0.5, y = 0.3, label = ("P = 1.0E-77"), size = 5)
ggplot(DandI, aes( x = Beta, y = Beta_coefficient.y )) +
geom_point(aes(color= Comparison), size = 1) +
geom_text(aes(label = Target), size = 2) +
# geom_text(aes(label = ifelse(Comparison == "extreme" & abs(Beta) > 0.3, Target, "")), size = 2, color = "black") +
geom_smooth(method = 'lm', formula = y ~ x) +
xlab("DiRECT BMI-protein estimate") + ylab("INTERVAL MR BMI-protein estimate") +
theme(axis.text=element_text(size=10), axis.title=element_text(size=12,face="bold")) +
annotate("text", x = -0.5, y = 0.5, label = "N=2803", size = 5) +
annotate("text", x = -0.5, y = 0.4, label = ("R squared = 0.11"), size = 5) +
annotate("text", x = -0.5, y = 0.3, label = ("P = 1.0E-77"), size = 5)
View(DandI)
devtools::install_github("benmarwick/wordcountaddin", type = "source", dependencies = TRUE)
library(devtools)
devtools::install_github("benmarwick/wordcountaddin", type = "source", dependencies = TRUE)
library(wordcountaddin)
wordcountaddin:::readability()
wordcountaddin:::text_stats()
wordcountaddin:::text_stats()
wordcountaddin::word_count("05-chap5.Rmd")
setwd("~/OneDrive - University of Bristol/PhD/Main project/Thesis/index")
wordcountaddin::word_count("05-chap5.Rmd")
